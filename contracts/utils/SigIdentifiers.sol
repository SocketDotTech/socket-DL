// SPDX-License-Identifier: GPL-3.0-only
pragma solidity 0.8.7;

bytes32 constant SEAL_GAS_LIMIT_UPDATE_SIG_IDENTIFIER = keccak256(
    "SEAL_GAS_LIMIT_UPDATE"
);
bytes32 constant PROPOSE_GAS_LIMIT_UPDATE_SIG_IDENTIFIER = keccak256(
    "PROPOSE_GAS_LIMIT_UPDATE"
);
bytes32 constant ATTEST_GAS_LIMIT_UPDATE_SIG_IDENTIFIER = keccak256(
    "ATTEST_GAS_LIMIT_UPDATE"
);

bytes32 constant TRIP_PATH_SIG_IDENTIFIER = keccak256("TRIP_PATH");
bytes32 constant TRIP_GLOBAL_SIG_IDENTIFIER = keccak256("TRIP_GLOBAL");

bytes32 constant UNTRIP_PATH_SIG_IDENTIFIER = keccak256("UNTRIP_PATH");
bytes32 constant UNTRIP_GLOBAL_SIG_IDENTIFIER = keccak256("UNTRIP_GLOBAL");

bytes32 constant TRIP_NATIVE_SIG_IDENTIFIER = keccak256("TRIP_NATIVE");
bytes32 constant UNTRIP_NATIVE_SIG_IDENTIFIER = keccak256("UNTRIP_NATIVE");

bytes32 constant EXECUTION_OVERHEAD_UPDATE_SIG_IDENTIFIER = keccak256(
    "EXECUTION_OVERHEAD_UPDATE"
);

bytes32 constant ARBITRUM_NATIVE_FEE_UPDATE_SIG_IDENTIFIER = keccak256(
    "ARBITRUM_NATIVE_FEE_UPDATE"
);

bytes32 constant L1_RECEIVE_GAS_LIMIT_UPDATE_SIG_IDENTIFIER = keccak256(
    "L1_RECEIVE_GAS_LIMIT_UPDATE"
);
bytes32 constant INITIAL_CONFIRMATION_GAS_LIMIT_UPDATE_SIG_IDENTIFIER = keccak256(
    "INITIAL_CONFIRMATION_GAS_LIMIT_UPDATE"
);

bytes32 constant FEES_UPDATE_SIG_IDENTIFIER = keccak256("FEES_UPDATE");
